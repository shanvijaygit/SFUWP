//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace UWPSfCirGauge
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[42];
            _typeNameTable[0] = "Syncfusion.UI.Xaml.Gauges.SfCircularGauge";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[2] = "Windows.Foundation.Point";
            _typeNameTable[3] = "Syncfusion.UI.Xaml.Gauges.HeaderAlignment";
            _typeNameTable[4] = "System.Enum";
            _typeNameTable[5] = "System.ValueType";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularScale>";
            _typeNameTable[8] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularScale>";
            _typeNameTable[9] = "Syncfusion.UI.Xaml.Gauges.CircularScale";
            _typeNameTable[10] = "Double";
            _typeNameTable[11] = "Int32";
            _typeNameTable[12] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[13] = "Boolean";
            _typeNameTable[14] = "Syncfusion.UI.Xaml.Gauges.CircularRangeCollection";
            _typeNameTable[15] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularRange>";
            _typeNameTable[16] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularRange>";
            _typeNameTable[17] = "Syncfusion.UI.Xaml.Gauges.CircularRange";
            _typeNameTable[18] = "Windows.UI.Xaml.Media.PathSegmentCollection";
            _typeNameTable[19] = "Windows.Foundation.Size";
            _typeNameTable[20] = "Syncfusion.UI.Xaml.Gauges.CircularPointerCollection";
            _typeNameTable[21] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularPointer>";
            _typeNameTable[22] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularPointer>";
            _typeNameTable[23] = "Syncfusion.UI.Xaml.Gauges.CircularPointer";
            _typeNameTable[24] = "Syncfusion.UI.Xaml.Gauges.PointerType";
            _typeNameTable[25] = "Syncfusion.UI.Xaml.Gauges.Symbol";
            _typeNameTable[26] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[27] = "Syncfusion.UI.Xaml.Gauges.NeedlePointerType";
            _typeNameTable[28] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[29] = "Syncfusion.UI.Xaml.Gauges.NumericScaleType";
            _typeNameTable[30] = "Syncfusion.UI.Xaml.Gauges.LabelPosition";
            _typeNameTable[31] = "Syncfusion.UI.Xaml.Gauges.TickPosition";
            _typeNameTable[32] = "Syncfusion.UI.Xaml.Gauges.RangePointerPosition";
            _typeNameTable[33] = "Syncfusion.UI.Xaml.Gauges.RangePosition";
            _typeNameTable[34] = "Windows.UI.Xaml.Media.SweepDirection";
            _typeNameTable[35] = "String";
            _typeNameTable[36] = "Syncfusion.UI.Xaml.Gauges.TickShape";
            _typeNameTable[37] = "Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes";
            _typeNameTable[38] = "Windows.UI.Xaml.Style";
            _typeNameTable[39] = "UWPSfCirGauge.MainPage";
            _typeNameTable[40] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[41] = "Windows.UI.Xaml.Controls.UserControl";

            _typeTable = new global::System.Type[42];
            _typeTable[0] = typeof(global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[2] = typeof(global::Windows.Foundation.Point);
            _typeTable[3] = typeof(global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment);
            _typeTable[4] = typeof(global::System.Enum);
            _typeTable[5] = typeof(global::System.ValueType);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>);
            _typeTable[9] = typeof(global::Syncfusion.UI.Xaml.Gauges.CircularScale);
            _typeTable[10] = typeof(global::System.Double);
            _typeTable[11] = typeof(global::System.Int32);
            _typeTable[12] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[13] = typeof(global::System.Boolean);
            _typeTable[14] = typeof(global::Syncfusion.UI.Xaml.Gauges.CircularRangeCollection);
            _typeTable[15] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularRange>);
            _typeTable[16] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Gauges.CircularRange>);
            _typeTable[17] = typeof(global::Syncfusion.UI.Xaml.Gauges.CircularRange);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.Media.PathSegmentCollection);
            _typeTable[19] = typeof(global::Windows.Foundation.Size);
            _typeTable[20] = typeof(global::Syncfusion.UI.Xaml.Gauges.CircularPointerCollection);
            _typeTable[21] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularPointer>);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Gauges.CircularPointer>);
            _typeTable[23] = typeof(global::Syncfusion.UI.Xaml.Gauges.CircularPointer);
            _typeTable[24] = typeof(global::Syncfusion.UI.Xaml.Gauges.PointerType);
            _typeTable[25] = typeof(global::Syncfusion.UI.Xaml.Gauges.Symbol);
            _typeTable[26] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[27] = typeof(global::Syncfusion.UI.Xaml.Gauges.NeedlePointerType);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[29] = typeof(global::Syncfusion.UI.Xaml.Gauges.NumericScaleType);
            _typeTable[30] = typeof(global::Syncfusion.UI.Xaml.Gauges.LabelPosition);
            _typeTable[31] = typeof(global::Syncfusion.UI.Xaml.Gauges.TickPosition);
            _typeTable[32] = typeof(global::Syncfusion.UI.Xaml.Gauges.RangePointerPosition);
            _typeTable[33] = typeof(global::Syncfusion.UI.Xaml.Gauges.RangePosition);
            _typeTable[34] = typeof(global::Windows.UI.Xaml.Media.SweepDirection);
            _typeTable[35] = typeof(global::System.String);
            _typeTable[36] = typeof(global::Syncfusion.UI.Xaml.Gauges.TickShape);
            _typeTable[37] = typeof(global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes);
            _typeTable[38] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[39] = typeof(global::UWPSfCirGauge.MainPage);
            _typeTable[40] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SfCircularGauge() { return new global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge(); }
        private object Activate_7_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>(); }
        private object Activate_8_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>(); }
        private object Activate_9_CircularScale() { return new global::Syncfusion.UI.Xaml.Gauges.CircularScale(); }
        private object Activate_14_CircularRangeCollection() { return new global::Syncfusion.UI.Xaml.Gauges.CircularRangeCollection(); }
        private object Activate_15_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularRange>(); }
        private object Activate_16_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Gauges.CircularRange>(); }
        private object Activate_17_CircularRange() { return new global::Syncfusion.UI.Xaml.Gauges.CircularRange(); }
        private object Activate_20_CircularPointerCollection() { return new global::Syncfusion.UI.Xaml.Gauges.CircularPointerCollection(); }
        private object Activate_21_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularPointer>(); }
        private object Activate_22_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Gauges.CircularPointer>(); }
        private object Activate_23_CircularPointer() { return new global::Syncfusion.UI.Xaml.Gauges.CircularPointer(); }
        private object Activate_39_MainPage() { return new global::UWPSfCirGauge.MainPage(); }
        private void VectorAdd_7_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)item;
            collection.Add(newItem);
        }
        private void VectorAdd_8_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)item;
            collection.Add(newItem);
        }
        private void VectorAdd_14_CircularRangeCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularRange>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)item;
            collection.Add(newItem);
        }
        private void VectorAdd_15_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularRange>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)item;
            collection.Add(newItem);
        }
        private void VectorAdd_16_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularRange>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_CircularPointerCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularPointer>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)item;
            collection.Add(newItem);
        }
        private void VectorAdd_21_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularPointer>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)item;
            collection.Add(newItem);
        }
        private void VectorAdd_22_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Gauges.CircularPointer>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Syncfusion.UI.Xaml.Gauges.SfCircularGauge
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_0_SfCircularGauge;
                userType.AddMemberName("GaugeHeaderPosition");
                userType.AddMemberName("HeaderAlignment");
                userType.AddMemberName("GaugeHeader");
                userType.AddMemberName("Scales");
                userType.AddMemberName("GaugeType");
                userType.AddMemberName("SubScales");
                userType.AddMemberName("MainScale");
                userType.AddMemberName("CircularScaleStyle");
                userType.AddMemberName("SpacingMargin");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.Foundation.Point
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Syncfusion.UI.Xaml.Gauges.HeaderAlignment
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Left", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.Left);
                userType.AddEnumValue("Right", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.Right);
                userType.AddEnumValue("Center", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.Center);
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.Bottom);
                userType.AddEnumValue("TopLeft", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.TopLeft);
                userType.AddEnumValue("TopRight", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.TopRight);
                userType.AddEnumValue("BottomLeft", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.BottomLeft);
                userType.AddEnumValue("BottomRight", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.BottomRight);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment.Custom);
                xamlType = userType;
                break;

            case 4:   //  System.Enum
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 5:   //  System.ValueType
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularScale>
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularScale>"));
                userType.CollectionAdd = VectorAdd_7_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularScale>
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_8_Collection;
                userType.CollectionAdd = VectorAdd_8_Collection;
                xamlType = userType;
                break;

            case 9:   //  Syncfusion.UI.Xaml.Gauges.CircularScale
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_9_CircularScale;
                userType.AddMemberName("StartAngle");
                userType.AddMemberName("SweepAngle");
                userType.AddMemberName("EndValue");
                userType.AddMemberName("MinorTicksPerInterval");
                userType.AddMemberName("LabelStroke");
                userType.AddMemberName("LabelAutoSizeChange");
                userType.AddMemberName("LabelOffset");
                userType.AddMemberName("TickLength");
                userType.AddMemberName("TickStroke");
                userType.AddMemberName("TickStrokeThickness");
                userType.AddMemberName("SmallTickLength");
                userType.AddMemberName("SmallTickStroke");
                userType.AddMemberName("SmallTickStrokeThickness");
                userType.AddMemberName("Ranges");
                userType.AddMemberName("Pointers");
                userType.AddMemberName("ScaleSeg");
                userType.AddMemberName("RimStroke");
                userType.AddMemberName("RimStrokeThickness");
                userType.AddMemberName("NumericScaleType");
                userType.AddMemberName("EnableSmartLabels");
                userType.AddMemberName("NoOfFractionalDigit");
                userType.AddMemberName("LabelPosition");
                userType.AddMemberName("TickPosition");
                userType.AddMemberName("MajorTickOffset");
                userType.AddMemberName("MinorTickOffset");
                userType.AddMemberName("RangePointerPosition");
                userType.AddMemberName("RangePointerOffset");
                userType.AddMemberName("RangePosition");
                userType.AddMemberName("RangeOffset");
                userType.AddMemberName("RadiusFactor");
                userType.AddMemberName("SweepDirection");
                userType.AddMemberName("EndPoint");
                userType.AddMemberName("StartPoint");
                userType.AddMemberName("BindRangeStrokeToLabels");
                userType.AddMemberName("BindRangeStrokeToTicks");
                userType.AddMemberName("LabelPostfix");
                userType.AddMemberName("LabelPrefix");
                userType.AddMemberName("StartValue");
                userType.AddMemberName("Interval");
                userType.AddMemberName("TickShape");
                userType.AddMemberName("Radius");
                userType.AddMemberName("IsLogarithmic");
                userType.AddMemberName("LogBase");
                userType.AddMemberName("LogExponentInterval");
                userType.AddMemberName("IsLogLabelSuperscriptEnabled");
                xamlType = userType;
                break;

            case 10:   //  Double
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Int32
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Boolean
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Syncfusion.UI.Xaml.Gauges.CircularRangeCollection
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularRange>"));
                userType.CollectionAdd = VectorAdd_14_CircularRangeCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularRange>
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularRange>"));
                userType.Activator = Activate_15_ObservableCollection;
                userType.CollectionAdd = VectorAdd_15_ObservableCollection;
                xamlType = userType;
                break;

            case 16:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularRange>
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_16_Collection;
                userType.CollectionAdd = VectorAdd_16_Collection;
                xamlType = userType;
                break;

            case 17:   //  Syncfusion.UI.Xaml.Gauges.CircularRange
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_17_CircularRange;
                userType.AddMemberName("StartValue");
                userType.AddMemberName("EndValue");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("RangeSeg");
                userType.AddMemberName("EndAngle");
                userType.AddMemberName("StartPoint");
                userType.AddMemberName("EndPoint");
                userType.AddMemberName("Size");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("IsLogarithmic");
                userType.AddMemberName("StartWidth");
                userType.AddMemberName("EndWidth");
                xamlType = userType;
                break;

            case 18:   //  Windows.UI.Xaml.Media.PathSegmentCollection
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Windows.Foundation.Size
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Syncfusion.UI.Xaml.Gauges.CircularPointerCollection
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularPointer>"));
                userType.CollectionAdd = VectorAdd_20_CircularPointerCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularPointer>
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularPointer>"));
                userType.Activator = Activate_21_ObservableCollection;
                userType.CollectionAdd = VectorAdd_21_ObservableCollection;
                xamlType = userType;
                break;

            case 22:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Gauges.CircularPointer>
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_Collection;
                userType.CollectionAdd = VectorAdd_22_Collection;
                xamlType = userType;
                break;

            case 23:   //  Syncfusion.UI.Xaml.Gauges.CircularPointer
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_23_CircularPointer;
                userType.AddMemberName("PointerType");
                userType.AddMemberName("Value");
                userType.AddMemberName("RangePointerStroke");
                userType.AddMemberName("RangePointerStrokeThickness");
                userType.AddMemberName("Symbol");
                userType.AddMemberName("SymbolPointerStroke");
                userType.AddMemberName("SymbolPointerHeight");
                userType.AddMemberName("SymbolPointerWidth");
                userType.AddMemberName("SymbolPointerTemplate");
                userType.AddMemberName("NeedlePointerStroke");
                userType.AddMemberName("NeedlePointerStrokeThickness");
                userType.AddMemberName("NeedleLengthFactor");
                userType.AddMemberName("NeedlePointerType");
                userType.AddMemberName("PointerCapStroke");
                userType.AddMemberName("PointerCapDiameter");
                userType.AddMemberName("RangePointerVisibility");
                userType.AddMemberName("SymbolPointerVisibility");
                userType.AddMemberName("NeedlePointerVisibility");
                userType.AddMemberName("RangeStart");
                userType.AddMemberName("EnableAnimation");
                xamlType = userType;
                break;

            case 24:   //  Syncfusion.UI.Xaml.Gauges.PointerType
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("NeedlePointer", global::Syncfusion.UI.Xaml.Gauges.PointerType.NeedlePointer);
                userType.AddEnumValue("RangePointer", global::Syncfusion.UI.Xaml.Gauges.PointerType.RangePointer);
                userType.AddEnumValue("SymbolPointer", global::Syncfusion.UI.Xaml.Gauges.PointerType.SymbolPointer);
                xamlType = userType;
                break;

            case 25:   //  Syncfusion.UI.Xaml.Gauges.Symbol
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Gauges.Symbol.Rectangle);
                userType.AddEnumValue("RoundedRectangle", global::Syncfusion.UI.Xaml.Gauges.Symbol.RoundedRectangle);
                userType.AddEnumValue("Ellipse", global::Syncfusion.UI.Xaml.Gauges.Symbol.Ellipse);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Gauges.Symbol.Triangle);
                userType.AddEnumValue("InvertedTriangle", global::Syncfusion.UI.Xaml.Gauges.Symbol.InvertedTriangle);
                userType.AddEnumValue("Arrow", global::Syncfusion.UI.Xaml.Gauges.Symbol.Arrow);
                userType.AddEnumValue("InvertedArrow", global::Syncfusion.UI.Xaml.Gauges.Symbol.InvertedArrow);
                userType.AddEnumValue("Hexagon", global::Syncfusion.UI.Xaml.Gauges.Symbol.Hexagon);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.Gauges.Symbol.Pentagon);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Gauges.Symbol.Cross);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.Gauges.Symbol.Diamond);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Gauges.Symbol.Custom);
                xamlType = userType;
                break;

            case 26:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  Syncfusion.UI.Xaml.Gauges.NeedlePointerType
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Gauges.NeedlePointerType.Rectangle);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Gauges.NeedlePointerType.Triangle);
                userType.AddEnumValue("Arrow", global::Syncfusion.UI.Xaml.Gauges.NeedlePointerType.Arrow);
                userType.AddEnumValue("Tapered", global::Syncfusion.UI.Xaml.Gauges.NeedlePointerType.Tapered);
                xamlType = userType;
                break;

            case 28:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Syncfusion.UI.Xaml.Gauges.NumericScaleType
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Gauges.NumericScaleType.Auto);
                userType.AddEnumValue("Thousands", global::Syncfusion.UI.Xaml.Gauges.NumericScaleType.Thousands);
                userType.AddEnumValue("Millions", global::Syncfusion.UI.Xaml.Gauges.NumericScaleType.Millions);
                userType.AddEnumValue("Billions", global::Syncfusion.UI.Xaml.Gauges.NumericScaleType.Billions);
                userType.AddEnumValue("Trillions", global::Syncfusion.UI.Xaml.Gauges.NumericScaleType.Trillions);
                userType.AddEnumValue("Quadrillions", global::Syncfusion.UI.Xaml.Gauges.NumericScaleType.Quadrillions);
                userType.AddEnumValue("Quintillions", global::Syncfusion.UI.Xaml.Gauges.NumericScaleType.Quintillions);
                xamlType = userType;
                break;

            case 30:   //  Syncfusion.UI.Xaml.Gauges.LabelPosition
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Gauges.LabelPosition.Inside);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Gauges.LabelPosition.Outside);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Gauges.LabelPosition.Custom);
                xamlType = userType;
                break;

            case 31:   //  Syncfusion.UI.Xaml.Gauges.TickPosition
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Gauges.TickPosition.Inside);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Gauges.TickPosition.Outside);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Gauges.TickPosition.Cross);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Gauges.TickPosition.Custom);
                xamlType = userType;
                break;

            case 32:   //  Syncfusion.UI.Xaml.Gauges.RangePointerPosition
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Gauges.RangePointerPosition.Inside);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Gauges.RangePointerPosition.Outside);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Gauges.RangePointerPosition.Cross);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Gauges.RangePointerPosition.Custom);
                xamlType = userType;
                break;

            case 33:   //  Syncfusion.UI.Xaml.Gauges.RangePosition
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Inside", global::Syncfusion.UI.Xaml.Gauges.RangePosition.Inside);
                userType.AddEnumValue("SetAsGaugeRim", global::Syncfusion.UI.Xaml.Gauges.RangePosition.SetAsGaugeRim);
                userType.AddEnumValue("Outside", global::Syncfusion.UI.Xaml.Gauges.RangePosition.Outside);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Gauges.RangePosition.Custom);
                xamlType = userType;
                break;

            case 34:   //  Windows.UI.Xaml.Media.SweepDirection
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  String
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  Syncfusion.UI.Xaml.Gauges.TickShape
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ellipse", global::Syncfusion.UI.Xaml.Gauges.TickShape.Ellipse);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Gauges.TickShape.Rectangle);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Gauges.TickShape.Triangle);
                xamlType = userType;
                break;

            case 37:   //  Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.Default);
                userType.AddEnumValue("East", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.East);
                userType.AddEnumValue("West", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.West);
                userType.AddEnumValue("North", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.North);
                userType.AddEnumValue("South", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.South);
                userType.AddEnumValue("NorthEast", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.NorthEast);
                userType.AddEnumValue("NorthWest", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.NorthWest);
                userType.AddEnumValue("SouthEast", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.SouthEast);
                userType.AddEnumValue("SouthWest", global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes.SouthWest);
                xamlType = userType;
                break;

            case 38:   //  Windows.UI.Xaml.Style
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  UWPSfCirGauge.MainPage
                userType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Reports.Syncfusion_SfReportViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SfCircularGauge_GaugeHeaderPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.GaugeHeaderPosition;
        }
        private void set_0_SfCircularGauge_GaugeHeaderPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.GaugeHeaderPosition = (global::Windows.Foundation.Point)Value;
        }
        private object get_1_SfCircularGauge_HeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.HeaderAlignment;
        }
        private void set_1_SfCircularGauge_HeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.HeaderAlignment = (global::Syncfusion.UI.Xaml.Gauges.HeaderAlignment)Value;
        }
        private object get_2_SfCircularGauge_GaugeHeader(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.GaugeHeader;
        }
        private void set_2_SfCircularGauge_GaugeHeader(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.GaugeHeader = (global::System.Object)Value;
        }
        private object get_3_SfCircularGauge_Scales(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.Scales;
        }
        private void set_3_SfCircularGauge_Scales(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.Scales = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>)Value;
        }
        private object get_4_CircularScale_StartAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.StartAngle;
        }
        private void set_4_CircularScale_StartAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.StartAngle = (global::System.Double)Value;
        }
        private object get_5_CircularScale_SweepAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.SweepAngle;
        }
        private void set_5_CircularScale_SweepAngle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.SweepAngle = (global::System.Double)Value;
        }
        private object get_6_CircularScale_EndValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.EndValue;
        }
        private void set_6_CircularScale_EndValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.EndValue = (global::System.Double)Value;
        }
        private object get_7_CircularScale_MinorTicksPerInterval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.MinorTicksPerInterval;
        }
        private void set_7_CircularScale_MinorTicksPerInterval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.MinorTicksPerInterval = (global::System.Int32)Value;
        }
        private object get_8_CircularScale_LabelStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LabelStroke;
        }
        private void set_8_CircularScale_LabelStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LabelStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_9_CircularScale_LabelAutoSizeChange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LabelAutoSizeChange;
        }
        private void set_9_CircularScale_LabelAutoSizeChange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LabelAutoSizeChange = (global::System.Boolean)Value;
        }
        private object get_10_CircularScale_LabelOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LabelOffset;
        }
        private void set_10_CircularScale_LabelOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LabelOffset = (global::System.Double)Value;
        }
        private object get_11_CircularScale_TickLength(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.TickLength;
        }
        private void set_11_CircularScale_TickLength(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.TickLength = (global::System.Double)Value;
        }
        private object get_12_CircularScale_TickStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.TickStroke;
        }
        private void set_12_CircularScale_TickStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.TickStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_13_CircularScale_TickStrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.TickStrokeThickness;
        }
        private void set_13_CircularScale_TickStrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.TickStrokeThickness = (global::System.Double)Value;
        }
        private object get_14_CircularScale_SmallTickLength(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.SmallTickLength;
        }
        private void set_14_CircularScale_SmallTickLength(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.SmallTickLength = (global::System.Double)Value;
        }
        private object get_15_CircularScale_SmallTickStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.SmallTickStroke;
        }
        private void set_15_CircularScale_SmallTickStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.SmallTickStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_16_CircularScale_SmallTickStrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.SmallTickStrokeThickness;
        }
        private void set_16_CircularScale_SmallTickStrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.SmallTickStrokeThickness = (global::System.Double)Value;
        }
        private object get_17_CircularScale_Ranges(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.Ranges;
        }
        private void set_17_CircularScale_Ranges(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.Ranges = (global::Syncfusion.UI.Xaml.Gauges.CircularRangeCollection)Value;
        }
        private object get_18_CircularRange_StartValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.StartValue;
        }
        private void set_18_CircularRange_StartValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.StartValue = (global::System.Double)Value;
        }
        private object get_19_CircularRange_EndValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.EndValue;
        }
        private void set_19_CircularRange_EndValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.EndValue = (global::System.Double)Value;
        }
        private object get_20_CircularRange_Stroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.Stroke;
        }
        private void set_20_CircularRange_Stroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_21_CircularRange_RangeSeg(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.RangeSeg;
        }
        private void set_21_CircularRange_RangeSeg(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.RangeSeg = (global::Windows.UI.Xaml.Media.PathSegmentCollection)Value;
        }
        private object get_22_CircularRange_EndAngle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.EndAngle;
        }
        private object get_23_CircularRange_StartPoint(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.StartPoint;
        }
        private object get_24_CircularRange_EndPoint(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.EndPoint;
        }
        private object get_25_CircularRange_Size(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.Size;
        }
        private object get_26_CircularRange_StrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.StrokeThickness;
        }
        private void set_26_CircularRange_StrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_27_CircularRange_IsLogarithmic(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.IsLogarithmic;
        }
        private void set_27_CircularRange_IsLogarithmic(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.IsLogarithmic = (global::System.Boolean)Value;
        }
        private object get_28_CircularRange_StartWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.StartWidth;
        }
        private void set_28_CircularRange_StartWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.StartWidth = (global::System.Double)Value;
        }
        private object get_29_CircularRange_EndWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            return that.EndWidth;
        }
        private void set_29_CircularRange_EndWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularRange)instance;
            that.EndWidth = (global::System.Double)Value;
        }
        private object get_30_CircularScale_Pointers(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.Pointers;
        }
        private void set_30_CircularScale_Pointers(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.Pointers = (global::Syncfusion.UI.Xaml.Gauges.CircularPointerCollection)Value;
        }
        private object get_31_CircularPointer_PointerType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.PointerType;
        }
        private void set_31_CircularPointer_PointerType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.PointerType = (global::Syncfusion.UI.Xaml.Gauges.PointerType)Value;
        }
        private object get_32_CircularPointer_Value(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.Value;
        }
        private void set_32_CircularPointer_Value(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_33_CircularPointer_RangePointerStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.RangePointerStroke;
        }
        private void set_33_CircularPointer_RangePointerStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.RangePointerStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_34_CircularPointer_RangePointerStrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.RangePointerStrokeThickness;
        }
        private void set_34_CircularPointer_RangePointerStrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.RangePointerStrokeThickness = (global::System.Double)Value;
        }
        private object get_35_CircularPointer_Symbol(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.Symbol;
        }
        private void set_35_CircularPointer_Symbol(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.Symbol = (global::Syncfusion.UI.Xaml.Gauges.Symbol)Value;
        }
        private object get_36_CircularPointer_SymbolPointerStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.SymbolPointerStroke;
        }
        private void set_36_CircularPointer_SymbolPointerStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.SymbolPointerStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_37_CircularPointer_SymbolPointerHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.SymbolPointerHeight;
        }
        private void set_37_CircularPointer_SymbolPointerHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.SymbolPointerHeight = (global::System.Double)Value;
        }
        private object get_38_CircularPointer_SymbolPointerWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.SymbolPointerWidth;
        }
        private void set_38_CircularPointer_SymbolPointerWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.SymbolPointerWidth = (global::System.Double)Value;
        }
        private object get_39_CircularPointer_SymbolPointerTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.SymbolPointerTemplate;
        }
        private void set_39_CircularPointer_SymbolPointerTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.SymbolPointerTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_40_CircularPointer_NeedlePointerStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.NeedlePointerStroke;
        }
        private void set_40_CircularPointer_NeedlePointerStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.NeedlePointerStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_41_CircularPointer_NeedlePointerStrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.NeedlePointerStrokeThickness;
        }
        private void set_41_CircularPointer_NeedlePointerStrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.NeedlePointerStrokeThickness = (global::System.Double)Value;
        }
        private object get_42_CircularPointer_NeedleLengthFactor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.NeedleLengthFactor;
        }
        private void set_42_CircularPointer_NeedleLengthFactor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.NeedleLengthFactor = (global::System.Double)Value;
        }
        private object get_43_CircularPointer_NeedlePointerType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.NeedlePointerType;
        }
        private void set_43_CircularPointer_NeedlePointerType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.NeedlePointerType = (global::Syncfusion.UI.Xaml.Gauges.NeedlePointerType)Value;
        }
        private object get_44_CircularPointer_PointerCapStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.PointerCapStroke;
        }
        private void set_44_CircularPointer_PointerCapStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.PointerCapStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_45_CircularPointer_PointerCapDiameter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.PointerCapDiameter;
        }
        private void set_45_CircularPointer_PointerCapDiameter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.PointerCapDiameter = (global::System.Double)Value;
        }
        private object get_46_CircularPointer_RangePointerVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.RangePointerVisibility;
        }
        private void set_46_CircularPointer_RangePointerVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.RangePointerVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_47_CircularPointer_SymbolPointerVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.SymbolPointerVisibility;
        }
        private void set_47_CircularPointer_SymbolPointerVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.SymbolPointerVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_48_CircularPointer_NeedlePointerVisibility(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.NeedlePointerVisibility;
        }
        private void set_48_CircularPointer_NeedlePointerVisibility(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.NeedlePointerVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_49_CircularPointer_RangeStart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.RangeStart;
        }
        private void set_49_CircularPointer_RangeStart(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.RangeStart = (global::System.Double)Value;
        }
        private object get_50_CircularPointer_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            return that.EnableAnimation;
        }
        private void set_50_CircularPointer_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularPointer)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_51_CircularScale_ScaleSeg(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.ScaleSeg;
        }
        private void set_51_CircularScale_ScaleSeg(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.ScaleSeg = (global::Windows.UI.Xaml.Media.PathSegmentCollection)Value;
        }
        private object get_52_CircularScale_RimStroke(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.RimStroke;
        }
        private void set_52_CircularScale_RimStroke(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.RimStroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_53_CircularScale_RimStrokeThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.RimStrokeThickness;
        }
        private void set_53_CircularScale_RimStrokeThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.RimStrokeThickness = (global::System.Double)Value;
        }
        private object get_54_CircularScale_NumericScaleType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.NumericScaleType;
        }
        private void set_54_CircularScale_NumericScaleType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.NumericScaleType = (global::Syncfusion.UI.Xaml.Gauges.NumericScaleType)Value;
        }
        private object get_55_CircularScale_EnableSmartLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.EnableSmartLabels;
        }
        private void set_55_CircularScale_EnableSmartLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.EnableSmartLabels = (global::System.Boolean)Value;
        }
        private object get_56_CircularScale_NoOfFractionalDigit(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.NoOfFractionalDigit;
        }
        private void set_56_CircularScale_NoOfFractionalDigit(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.NoOfFractionalDigit = (global::System.Int32)Value;
        }
        private object get_57_CircularScale_LabelPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LabelPosition;
        }
        private void set_57_CircularScale_LabelPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LabelPosition = (global::Syncfusion.UI.Xaml.Gauges.LabelPosition)Value;
        }
        private object get_58_CircularScale_TickPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.TickPosition;
        }
        private void set_58_CircularScale_TickPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.TickPosition = (global::Syncfusion.UI.Xaml.Gauges.TickPosition)Value;
        }
        private object get_59_CircularScale_MajorTickOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.MajorTickOffset;
        }
        private void set_59_CircularScale_MajorTickOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.MajorTickOffset = (global::System.Double)Value;
        }
        private object get_60_CircularScale_MinorTickOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.MinorTickOffset;
        }
        private void set_60_CircularScale_MinorTickOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.MinorTickOffset = (global::System.Double)Value;
        }
        private object get_61_CircularScale_RangePointerPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.RangePointerPosition;
        }
        private void set_61_CircularScale_RangePointerPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.RangePointerPosition = (global::Syncfusion.UI.Xaml.Gauges.RangePointerPosition)Value;
        }
        private object get_62_CircularScale_RangePointerOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.RangePointerOffset;
        }
        private void set_62_CircularScale_RangePointerOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.RangePointerOffset = (global::System.Double)Value;
        }
        private object get_63_CircularScale_RangePosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.RangePosition;
        }
        private void set_63_CircularScale_RangePosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.RangePosition = (global::Syncfusion.UI.Xaml.Gauges.RangePosition)Value;
        }
        private object get_64_CircularScale_RangeOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.RangeOffset;
        }
        private void set_64_CircularScale_RangeOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.RangeOffset = (global::System.Double)Value;
        }
        private object get_65_CircularScale_RadiusFactor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.RadiusFactor;
        }
        private void set_65_CircularScale_RadiusFactor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.RadiusFactor = (global::System.Double)Value;
        }
        private object get_66_CircularScale_SweepDirection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.SweepDirection;
        }
        private void set_66_CircularScale_SweepDirection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.SweepDirection = (global::Windows.UI.Xaml.Media.SweepDirection)Value;
        }
        private object get_67_CircularScale_EndPoint(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.EndPoint;
        }
        private object get_68_CircularScale_StartPoint(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.StartPoint;
        }
        private object get_69_CircularScale_BindRangeStrokeToLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.BindRangeStrokeToLabels;
        }
        private void set_69_CircularScale_BindRangeStrokeToLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.BindRangeStrokeToLabels = (global::System.Boolean)Value;
        }
        private object get_70_CircularScale_BindRangeStrokeToTicks(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.BindRangeStrokeToTicks;
        }
        private void set_70_CircularScale_BindRangeStrokeToTicks(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.BindRangeStrokeToTicks = (global::System.Boolean)Value;
        }
        private object get_71_CircularScale_LabelPostfix(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LabelPostfix;
        }
        private void set_71_CircularScale_LabelPostfix(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LabelPostfix = (global::System.String)Value;
        }
        private object get_72_CircularScale_LabelPrefix(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LabelPrefix;
        }
        private void set_72_CircularScale_LabelPrefix(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LabelPrefix = (global::System.String)Value;
        }
        private object get_73_CircularScale_StartValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.StartValue;
        }
        private void set_73_CircularScale_StartValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.StartValue = (global::System.Double)Value;
        }
        private object get_74_CircularScale_Interval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.Interval;
        }
        private void set_74_CircularScale_Interval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.Interval = (global::System.Double)Value;
        }
        private object get_75_CircularScale_TickShape(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.TickShape;
        }
        private void set_75_CircularScale_TickShape(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.TickShape = (global::Syncfusion.UI.Xaml.Gauges.TickShape)Value;
        }
        private object get_76_CircularScale_Radius(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.Radius;
        }
        private void set_76_CircularScale_Radius(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.Radius = (global::System.Double)Value;
        }
        private object get_77_CircularScale_IsLogarithmic(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.IsLogarithmic;
        }
        private void set_77_CircularScale_IsLogarithmic(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.IsLogarithmic = (global::System.Boolean)Value;
        }
        private object get_78_CircularScale_LogBase(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LogBase;
        }
        private void set_78_CircularScale_LogBase(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LogBase = (global::System.Int32)Value;
        }
        private object get_79_CircularScale_LogExponentInterval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.LogExponentInterval;
        }
        private void set_79_CircularScale_LogExponentInterval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.LogExponentInterval = (global::System.Int32)Value;
        }
        private object get_80_CircularScale_IsLogLabelSuperscriptEnabled(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            return that.IsLogLabelSuperscriptEnabled;
        }
        private void set_80_CircularScale_IsLogLabelSuperscriptEnabled(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)instance;
            that.IsLogLabelSuperscriptEnabled = (global::System.Boolean)Value;
        }
        private object get_81_SfCircularGauge_GaugeType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.GaugeType;
        }
        private void set_81_SfCircularGauge_GaugeType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.GaugeType = (global::Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes)Value;
        }
        private object get_82_SfCircularGauge_SubScales(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.SubScales;
        }
        private void set_82_SfCircularGauge_SubScales(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.SubScales = (global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Gauges.CircularScale>)Value;
        }
        private object get_83_SfCircularGauge_MainScale(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.MainScale;
        }
        private void set_83_SfCircularGauge_MainScale(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.MainScale = (global::Syncfusion.UI.Xaml.Gauges.CircularScale)Value;
        }
        private object get_84_SfCircularGauge_CircularScaleStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.CircularScaleStyle;
        }
        private void set_84_SfCircularGauge_CircularScaleStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.CircularScaleStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_85_SfCircularGauge_SpacingMargin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            return that.SpacingMargin;
        }
        private void set_85_SfCircularGauge_SpacingMargin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Gauges.SfCircularGauge)instance;
            that.SpacingMargin = (global::System.Double)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember xamlMember = null;
            global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.GaugeHeaderPosition":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "GaugeHeaderPosition", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_SfCircularGauge_GaugeHeaderPosition;
                xamlMember.Setter = set_0_SfCircularGauge_GaugeHeaderPosition;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.HeaderAlignment":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "HeaderAlignment", "Syncfusion.UI.Xaml.Gauges.HeaderAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_SfCircularGauge_HeaderAlignment;
                xamlMember.Setter = set_1_SfCircularGauge_HeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.GaugeHeader":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "GaugeHeader", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_SfCircularGauge_GaugeHeader;
                xamlMember.Setter = set_2_SfCircularGauge_GaugeHeader;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.Scales":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Scales", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularScale>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_SfCircularGauge_Scales;
                xamlMember.Setter = set_3_SfCircularGauge_Scales;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.StartAngle":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "StartAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_CircularScale_StartAngle;
                xamlMember.Setter = set_4_CircularScale_StartAngle;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.SweepAngle":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SweepAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_CircularScale_SweepAngle;
                xamlMember.Setter = set_5_CircularScale_SweepAngle;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.EndValue":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EndValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_CircularScale_EndValue;
                xamlMember.Setter = set_6_CircularScale_EndValue;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.MinorTicksPerInterval":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "MinorTicksPerInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_CircularScale_MinorTicksPerInterval;
                xamlMember.Setter = set_7_CircularScale_MinorTicksPerInterval;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LabelStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LabelStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_CircularScale_LabelStroke;
                xamlMember.Setter = set_8_CircularScale_LabelStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LabelAutoSizeChange":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LabelAutoSizeChange", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_CircularScale_LabelAutoSizeChange;
                xamlMember.Setter = set_9_CircularScale_LabelAutoSizeChange;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LabelOffset":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LabelOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_CircularScale_LabelOffset;
                xamlMember.Setter = set_10_CircularScale_LabelOffset;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.TickLength":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "TickLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_CircularScale_TickLength;
                xamlMember.Setter = set_11_CircularScale_TickLength;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.TickStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "TickStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_CircularScale_TickStroke;
                xamlMember.Setter = set_12_CircularScale_TickStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.TickStrokeThickness":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "TickStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_CircularScale_TickStrokeThickness;
                xamlMember.Setter = set_13_CircularScale_TickStrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.SmallTickLength":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SmallTickLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_CircularScale_SmallTickLength;
                xamlMember.Setter = set_14_CircularScale_SmallTickLength;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.SmallTickStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SmallTickStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_CircularScale_SmallTickStroke;
                xamlMember.Setter = set_15_CircularScale_SmallTickStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.SmallTickStrokeThickness":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SmallTickStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_CircularScale_SmallTickStrokeThickness;
                xamlMember.Setter = set_16_CircularScale_SmallTickStrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.Ranges":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Ranges", "Syncfusion.UI.Xaml.Gauges.CircularRangeCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_CircularScale_Ranges;
                xamlMember.Setter = set_17_CircularScale_Ranges;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.StartValue":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "StartValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_CircularRange_StartValue;
                xamlMember.Setter = set_18_CircularRange_StartValue;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.EndValue":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EndValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_CircularRange_EndValue;
                xamlMember.Setter = set_19_CircularRange_EndValue;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.Stroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_CircularRange_Stroke;
                xamlMember.Setter = set_20_CircularRange_Stroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.RangeSeg":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangeSeg", "Windows.UI.Xaml.Media.PathSegmentCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_CircularRange_RangeSeg;
                xamlMember.Setter = set_21_CircularRange_RangeSeg;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.EndAngle":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EndAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_CircularRange_EndAngle;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.StartPoint":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "StartPoint", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_CircularRange_StartPoint;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.EndPoint":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EndPoint", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_CircularRange_EndPoint;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.Size":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Size", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_CircularRange_Size;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.StrokeThickness":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_CircularRange_StrokeThickness;
                xamlMember.Setter = set_26_CircularRange_StrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.IsLogarithmic":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "IsLogarithmic", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_CircularRange_IsLogarithmic;
                xamlMember.Setter = set_27_CircularRange_IsLogarithmic;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.StartWidth":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "StartWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_CircularRange_StartWidth;
                xamlMember.Setter = set_28_CircularRange_StartWidth;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularRange.EndWidth":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularRange");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EndWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_CircularRange_EndWidth;
                xamlMember.Setter = set_29_CircularRange_EndWidth;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.Pointers":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Pointers", "Syncfusion.UI.Xaml.Gauges.CircularPointerCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_CircularScale_Pointers;
                xamlMember.Setter = set_30_CircularScale_Pointers;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.PointerType":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "PointerType", "Syncfusion.UI.Xaml.Gauges.PointerType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_CircularPointer_PointerType;
                xamlMember.Setter = set_31_CircularPointer_PointerType;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.Value":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_CircularPointer_Value;
                xamlMember.Setter = set_32_CircularPointer_Value;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.RangePointerStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangePointerStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_CircularPointer_RangePointerStroke;
                xamlMember.Setter = set_33_CircularPointer_RangePointerStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.RangePointerStrokeThickness":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangePointerStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_CircularPointer_RangePointerStrokeThickness;
                xamlMember.Setter = set_34_CircularPointer_RangePointerStrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.Symbol":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Symbol", "Syncfusion.UI.Xaml.Gauges.Symbol");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_CircularPointer_Symbol;
                xamlMember.Setter = set_35_CircularPointer_Symbol;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.SymbolPointerStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SymbolPointerStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_CircularPointer_SymbolPointerStroke;
                xamlMember.Setter = set_36_CircularPointer_SymbolPointerStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.SymbolPointerHeight":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SymbolPointerHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_CircularPointer_SymbolPointerHeight;
                xamlMember.Setter = set_37_CircularPointer_SymbolPointerHeight;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.SymbolPointerWidth":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SymbolPointerWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_CircularPointer_SymbolPointerWidth;
                xamlMember.Setter = set_38_CircularPointer_SymbolPointerWidth;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.SymbolPointerTemplate":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SymbolPointerTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_CircularPointer_SymbolPointerTemplate;
                xamlMember.Setter = set_39_CircularPointer_SymbolPointerTemplate;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.NeedlePointerStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "NeedlePointerStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_CircularPointer_NeedlePointerStroke;
                xamlMember.Setter = set_40_CircularPointer_NeedlePointerStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.NeedlePointerStrokeThickness":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "NeedlePointerStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_CircularPointer_NeedlePointerStrokeThickness;
                xamlMember.Setter = set_41_CircularPointer_NeedlePointerStrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.NeedleLengthFactor":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "NeedleLengthFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_CircularPointer_NeedleLengthFactor;
                xamlMember.Setter = set_42_CircularPointer_NeedleLengthFactor;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.NeedlePointerType":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "NeedlePointerType", "Syncfusion.UI.Xaml.Gauges.NeedlePointerType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_CircularPointer_NeedlePointerType;
                xamlMember.Setter = set_43_CircularPointer_NeedlePointerType;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.PointerCapStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "PointerCapStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_CircularPointer_PointerCapStroke;
                xamlMember.Setter = set_44_CircularPointer_PointerCapStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.PointerCapDiameter":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "PointerCapDiameter", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_CircularPointer_PointerCapDiameter;
                xamlMember.Setter = set_45_CircularPointer_PointerCapDiameter;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.RangePointerVisibility":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangePointerVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_CircularPointer_RangePointerVisibility;
                xamlMember.Setter = set_46_CircularPointer_RangePointerVisibility;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.SymbolPointerVisibility":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SymbolPointerVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_CircularPointer_SymbolPointerVisibility;
                xamlMember.Setter = set_47_CircularPointer_SymbolPointerVisibility;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.NeedlePointerVisibility":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "NeedlePointerVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_CircularPointer_NeedlePointerVisibility;
                xamlMember.Setter = set_48_CircularPointer_NeedlePointerVisibility;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.RangeStart":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangeStart", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_CircularPointer_RangeStart;
                xamlMember.Setter = set_49_CircularPointer_RangeStart;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularPointer.EnableAnimation":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularPointer");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_CircularPointer_EnableAnimation;
                xamlMember.Setter = set_50_CircularPointer_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.ScaleSeg":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "ScaleSeg", "Windows.UI.Xaml.Media.PathSegmentCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_CircularScale_ScaleSeg;
                xamlMember.Setter = set_51_CircularScale_ScaleSeg;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.RimStroke":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RimStroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_CircularScale_RimStroke;
                xamlMember.Setter = set_52_CircularScale_RimStroke;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.RimStrokeThickness":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RimStrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_CircularScale_RimStrokeThickness;
                xamlMember.Setter = set_53_CircularScale_RimStrokeThickness;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.NumericScaleType":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "NumericScaleType", "Syncfusion.UI.Xaml.Gauges.NumericScaleType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_CircularScale_NumericScaleType;
                xamlMember.Setter = set_54_CircularScale_NumericScaleType;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.EnableSmartLabels":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EnableSmartLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_CircularScale_EnableSmartLabels;
                xamlMember.Setter = set_55_CircularScale_EnableSmartLabels;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.NoOfFractionalDigit":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "NoOfFractionalDigit", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_CircularScale_NoOfFractionalDigit;
                xamlMember.Setter = set_56_CircularScale_NoOfFractionalDigit;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LabelPosition":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LabelPosition", "Syncfusion.UI.Xaml.Gauges.LabelPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_CircularScale_LabelPosition;
                xamlMember.Setter = set_57_CircularScale_LabelPosition;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.TickPosition":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "TickPosition", "Syncfusion.UI.Xaml.Gauges.TickPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_CircularScale_TickPosition;
                xamlMember.Setter = set_58_CircularScale_TickPosition;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.MajorTickOffset":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "MajorTickOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_CircularScale_MajorTickOffset;
                xamlMember.Setter = set_59_CircularScale_MajorTickOffset;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.MinorTickOffset":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "MinorTickOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_CircularScale_MinorTickOffset;
                xamlMember.Setter = set_60_CircularScale_MinorTickOffset;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.RangePointerPosition":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangePointerPosition", "Syncfusion.UI.Xaml.Gauges.RangePointerPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_CircularScale_RangePointerPosition;
                xamlMember.Setter = set_61_CircularScale_RangePointerPosition;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.RangePointerOffset":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangePointerOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_CircularScale_RangePointerOffset;
                xamlMember.Setter = set_62_CircularScale_RangePointerOffset;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.RangePosition":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangePosition", "Syncfusion.UI.Xaml.Gauges.RangePosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_CircularScale_RangePosition;
                xamlMember.Setter = set_63_CircularScale_RangePosition;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.RangeOffset":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RangeOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_CircularScale_RangeOffset;
                xamlMember.Setter = set_64_CircularScale_RangeOffset;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.RadiusFactor":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "RadiusFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_CircularScale_RadiusFactor;
                xamlMember.Setter = set_65_CircularScale_RadiusFactor;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.SweepDirection":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SweepDirection", "Windows.UI.Xaml.Media.SweepDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_CircularScale_SweepDirection;
                xamlMember.Setter = set_66_CircularScale_SweepDirection;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.EndPoint":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "EndPoint", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_CircularScale_EndPoint;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.StartPoint":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "StartPoint", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_CircularScale_StartPoint;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.BindRangeStrokeToLabels":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "BindRangeStrokeToLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_CircularScale_BindRangeStrokeToLabels;
                xamlMember.Setter = set_69_CircularScale_BindRangeStrokeToLabels;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.BindRangeStrokeToTicks":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "BindRangeStrokeToTicks", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_CircularScale_BindRangeStrokeToTicks;
                xamlMember.Setter = set_70_CircularScale_BindRangeStrokeToTicks;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LabelPostfix":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LabelPostfix", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_CircularScale_LabelPostfix;
                xamlMember.Setter = set_71_CircularScale_LabelPostfix;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LabelPrefix":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LabelPrefix", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_CircularScale_LabelPrefix;
                xamlMember.Setter = set_72_CircularScale_LabelPrefix;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.StartValue":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "StartValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_CircularScale_StartValue;
                xamlMember.Setter = set_73_CircularScale_StartValue;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.Interval":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Interval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_CircularScale_Interval;
                xamlMember.Setter = set_74_CircularScale_Interval;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.TickShape":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "TickShape", "Syncfusion.UI.Xaml.Gauges.TickShape");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_75_CircularScale_TickShape;
                xamlMember.Setter = set_75_CircularScale_TickShape;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.Radius":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "Radius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_CircularScale_Radius;
                xamlMember.Setter = set_76_CircularScale_Radius;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.IsLogarithmic":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "IsLogarithmic", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_77_CircularScale_IsLogarithmic;
                xamlMember.Setter = set_77_CircularScale_IsLogarithmic;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LogBase":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LogBase", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_78_CircularScale_LogBase;
                xamlMember.Setter = set_78_CircularScale_LogBase;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.LogExponentInterval":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "LogExponentInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_79_CircularScale_LogExponentInterval;
                xamlMember.Setter = set_79_CircularScale_LogExponentInterval;
                break;
            case "Syncfusion.UI.Xaml.Gauges.CircularScale.IsLogLabelSuperscriptEnabled":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "IsLogLabelSuperscriptEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_CircularScale_IsLogLabelSuperscriptEnabled;
                xamlMember.Setter = set_80_CircularScale_IsLogLabelSuperscriptEnabled;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.GaugeType":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "GaugeType", "Syncfusion.UI.Xaml.Gauges.CircularGaugeTypes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_SfCircularGauge_GaugeType;
                xamlMember.Setter = set_81_SfCircularGauge_GaugeType;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.SubScales":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SubScales", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Gauges.CircularScale>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_82_SfCircularGauge_SubScales;
                xamlMember.Setter = set_82_SfCircularGauge_SubScales;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.MainScale":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "MainScale", "Syncfusion.UI.Xaml.Gauges.CircularScale");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_SfCircularGauge_MainScale;
                xamlMember.Setter = set_83_SfCircularGauge_MainScale;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.CircularScaleStyle":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "CircularScaleStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_SfCircularGauge_CircularScaleStyle;
                xamlMember.Setter = set_84_SfCircularGauge_CircularScaleStyle;
                break;
            case "Syncfusion.UI.Xaml.Gauges.SfCircularGauge.SpacingMargin":
                userType = (global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Gauges.SfCircularGauge");
                xamlMember = new global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlMember(this, "SpacingMargin", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_SfCircularGauge_SpacingMargin;
                xamlMember.Setter = set_85_SfCircularGauge_SpacingMargin;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlSystemBaseType
    {
        global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::UWPSfCirGauge.UWPSfCirGauge_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

