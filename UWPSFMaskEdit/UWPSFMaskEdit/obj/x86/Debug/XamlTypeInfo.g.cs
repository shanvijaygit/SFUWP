//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace UWPSFMaskEdit
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[30];
            _typeNameTable[0] = "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit";
            _typeNameTable[1] = "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.TextBox";
            _typeNameTable[3] = "Syncfusion.UI.Xaml.Controls.Input.MaskType";
            _typeNameTable[4] = "System.Enum";
            _typeNameTable[5] = "System.ValueType";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "String";
            _typeNameTable[8] = "Char";
            _typeNameTable[9] = "Syncfusion.UI.Xaml.Controls.Input.MaskFormat";
            _typeNameTable[10] = "Boolean";
            _typeNameTable[11] = "Syncfusion.UI.Xaml.Controls.Input.InputValidationMode";
            _typeNameTable[12] = "System.Globalization.CultureInfo";
            _typeNameTable[13] = "Syncfusion.UI.Xaml.Controls.Input.KeyboardOptions";
            _typeNameTable[14] = "System.Collections.IEnumerable";
            _typeNameTable[15] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[16] = "Windows.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[17] = "Windows.UI.Xaml.Controls.ItemsPanelTemplate";
            _typeNameTable[18] = "Windows.Foundation.Point";
            _typeNameTable[19] = "Int32";
            _typeNameTable[20] = "Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode";
            _typeNameTable[21] = "Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement";
            _typeNameTable[22] = "Syncfusion.UI.Xaml.Controls.Input.SuggestionMode";
            _typeNameTable[23] = "TimeSpan";
            _typeNameTable[24] = "Double";
            _typeNameTable[25] = "Windows.UI.Xaml.Style";
            _typeNameTable[26] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[27] = "UWPSFMaskEdit.MainPage";
            _typeNameTable[28] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[29] = "Windows.UI.Xaml.Controls.UserControl";

            _typeTable = new global::System.Type[30];
            _typeTable[0] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit);
            _typeTable[1] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.TextBox);
            _typeTable[3] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.MaskType);
            _typeTable[4] = typeof(global::System.Enum);
            _typeTable[5] = typeof(global::System.ValueType);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::System.String);
            _typeTable[8] = typeof(global::System.Char);
            _typeTable[9] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.MaskFormat);
            _typeTable[10] = typeof(global::System.Boolean);
            _typeTable[11] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.InputValidationMode);
            _typeTable[12] = typeof(global::System.Globalization.CultureInfo);
            _typeTable[13] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.KeyboardOptions);
            _typeTable[14] = typeof(global::System.Collections.IEnumerable);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Controls.ItemsPanelTemplate);
            _typeTable[18] = typeof(global::Windows.Foundation.Point);
            _typeTable[19] = typeof(global::System.Int32);
            _typeTable[20] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode);
            _typeTable[21] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement);
            _typeTable[22] = typeof(global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode);
            _typeTable[23] = typeof(global::System.TimeSpan);
            _typeTable[24] = typeof(global::System.Double);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[26] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[27] = typeof(global::UWPSFMaskEdit.MainPage);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SfMaskedEdit() { return new global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit(); }
        private object Activate_1_SfTextBoxExt() { return new global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt(); }
        private object Activate_27_MainPage() { return new global::UWPSFMaskEdit.MainPage(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt"));
                userType.Activator = Activate_0_SfMaskedEdit;
                userType.AddMemberName("MaskType");
                userType.AddMemberName("Mask");
                userType.AddMemberName("Value");
                userType.AddMemberName("PromptChar");
                userType.AddMemberName("ValueMaskFormat");
                userType.AddMemberName("ShowPromptOnFocus");
                userType.AddMemberName("HasError");
                userType.AddMemberName("ValidationMode");
                userType.AddMemberName("Culture");
                userType.AddMemberName("KeyboardType");
                xamlType = userType;
                break;

            case 1:   //  Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.TextBox"));
                userType.Activator = Activate_1_SfTextBoxExt;
                userType.AddMemberName("Watermark");
                userType.AddMemberName("AllowPointerEvents");
                userType.AddMemberName("AutoCompleteSource");
                userType.AddMemberName("AutoCompleteItemTemplate");
                userType.AddMemberName("AutoCompleteItemTemplateSelector");
                userType.AddMemberName("AutoCompleteItemsPanel");
                userType.AddMemberName("IsSuggestionOpen");
                userType.AddMemberName("SuggestionBoxPosition");
                userType.AddMemberName("SearchItemPath");
                userType.AddMemberName("ValueMemberPath");
                userType.AddMemberName("Suggestions");
                userType.AddMemberName("SuggestionIndex");
                userType.AddMemberName("AutoCompleteMode");
                userType.AddMemberName("SuggestionBoxPlacement");
                userType.AddMemberName("SuggestionMode");
                userType.AddMemberName("IgnoreCase");
                userType.AddMemberName("MinimumPrefixCharacters");
                userType.AddMemberName("PopupDelay");
                userType.AddMemberName("MaxDropDownHeight");
                userType.AddMemberName("SuggestionBoxStyle");
                userType.AddMemberName("Delimeter");
                userType.AddMemberName("Delimiter");
                userType.AddMemberName("ShowSuggestionsOnFocus");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectedValue");
                userType.AddMemberName("WatermarkForeground");
                userType.AddMemberName("WatermarkTemplate");
                userType.AddMemberName("WatermarkTemplateSelector");
                xamlType = userType;
                break;

            case 2:   //  Windows.UI.Xaml.Controls.TextBox
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Syncfusion.UI.Xaml.Controls.Input.MaskType
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Simple", global::Syncfusion.UI.Xaml.Controls.Input.MaskType.Simple);
                userType.AddEnumValue("Regular", global::Syncfusion.UI.Xaml.Controls.Input.MaskType.Regular);
                userType.AddEnumValue("RegEx", global::Syncfusion.UI.Xaml.Controls.Input.MaskType.RegEx);
                xamlType = userType;
                break;

            case 4:   //  System.Enum
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 5:   //  System.ValueType
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  String
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Char
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  Syncfusion.UI.Xaml.Controls.Input.MaskFormat
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("ExcludePromptAndLiterals", global::Syncfusion.UI.Xaml.Controls.Input.MaskFormat.ExcludePromptAndLiterals);
                userType.AddEnumValue("IncludeLiterals", global::Syncfusion.UI.Xaml.Controls.Input.MaskFormat.IncludeLiterals);
                userType.AddEnumValue("IncludePrompt", global::Syncfusion.UI.Xaml.Controls.Input.MaskFormat.IncludePrompt);
                userType.AddEnumValue("IncludePromptAndLiterals", global::Syncfusion.UI.Xaml.Controls.Input.MaskFormat.IncludePromptAndLiterals);
                xamlType = userType;
                break;

            case 10:   //  Boolean
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Syncfusion.UI.Xaml.Controls.Input.InputValidationMode
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("KeyPress", global::Syncfusion.UI.Xaml.Controls.Input.InputValidationMode.KeyPress);
                userType.AddEnumValue("LostFocus", global::Syncfusion.UI.Xaml.Controls.Input.InputValidationMode.LostFocus);
                xamlType = userType;
                break;

            case 12:   //  System.Globalization.CultureInfo
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  Syncfusion.UI.Xaml.Controls.Input.KeyboardOptions
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Controls.Input.KeyboardOptions.Default);
                userType.AddEnumValue("AZERTY", global::Syncfusion.UI.Xaml.Controls.Input.KeyboardOptions.AZERTY);
                xamlType = userType;
                break;

            case 14:   //  System.Collections.IEnumerable
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Windows.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Windows.UI.Xaml.Controls.ItemsPanelTemplate
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Windows.Foundation.Point
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Int32
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode.None);
                userType.AddEnumValue("Append", global::Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode.Append);
                userType.AddEnumValue("Suggest", global::Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode.Suggest);
                userType.AddEnumValue("SuggestAppend", global::Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode.SuggestAppend);
                xamlType = userType;
                break;

            case 21:   //  Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement.Bottom);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement.None);
                xamlType = userType;
                break;

            case 22:   //  Syncfusion.UI.Xaml.Controls.Input.SuggestionMode
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.None);
                userType.AddEnumValue("StartsWith", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.StartsWith);
                userType.AddEnumValue("StartsWithCaseSensitive", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.StartsWithCaseSensitive);
                userType.AddEnumValue("StartsWithOrdinal", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.StartsWithOrdinal);
                userType.AddEnumValue("StartsWithOrdinalCaseSensitive", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.StartsWithOrdinalCaseSensitive);
                userType.AddEnumValue("Contains", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.Contains);
                userType.AddEnumValue("ContainsCaseSensitive", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.ContainsCaseSensitive);
                userType.AddEnumValue("ContainsOrdinal", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.ContainsOrdinal);
                userType.AddEnumValue("ContainsOrdinalCaseSensitive", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.ContainsOrdinalCaseSensitive);
                userType.AddEnumValue("Equals", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.Equals);
                userType.AddEnumValue("EqualsCaseSensitive", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.EqualsCaseSensitive);
                userType.AddEnumValue("EqualsOrdinal", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.EqualsOrdinal);
                userType.AddEnumValue("EqualsOrdinalCaseSensitive", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.EqualsOrdinalCaseSensitive);
                userType.AddEnumValue("Custom", global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode.Custom);
                xamlType = userType;
                break;

            case 23:   //  TimeSpan
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  Double
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Windows.UI.Xaml.Style
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  UWPSFMaskEdit.MainPage
                userType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfAccordion_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfBarcode.UWP.Syncfusion_SfBarcode_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.BulletGraph.Syncfusion_SfBulletGraph_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfBusyIndicator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfCarousel_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.CellGrid.Syncfusion_SfCellGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfChart.UWP.Syncfusion_SfChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Media.Syncfusion_SfColorPickers_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfDiagram.UWP.Syncfusion_SfDiagram_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfDockingManager_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Gauges.Syncfusion_SfGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Grid.Syncfusion_SfGridCommon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfGroupBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.HeatMap.Syncfusion_SfHeatMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfHubTile_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Input.Syncfusion_SfInput_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.SfKanban.UWP.Syncfusion_SfKanban_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Maps.Syncfusion_SfMaps_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.NavigationDrawer.Syncfusion_SfNavigationDrawer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.PdfViewer.Syncfusion_SfPdfViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotChart.Syncfusion_SfPivotChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotClient.Syncfusion_SfPivotClient_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGauge.Syncfusion_SfPivotGauge_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotGrid.Syncfusion_SfPivotGrid_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PivotShared.Syncfusion_SfPivotShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Notification.Syncfusion_SfProgressBar_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.PullToRefresh.Syncfusion_SfPullToRefresh_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfRadialMenu_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Reports.Syncfusion_SfReportViewer_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.SfRibbon.Syncfusion_SfRibbon_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.RichTextBoxAdv.Syncfusion_SfRichTextBoxAdv_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Rotator.Syncfusion_SfRotator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Schedule.Syncfusion_SfSchedule_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfShared_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Syncfusion_SfSpellChecker_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Spreadsheet.Syncfusion_SfSpreadsheet_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.SunburstChart.Syncfusion_SfSunburstChart_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTabControl_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Layout.Syncfusion_SfTileView_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.TreeMap.Syncfusion_SfTreeMap_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.UI.Xaml.Controls.Navigation.Syncfusion_SfTreeNavigator_UWP_2015_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_SfMaskedEdit_MaskType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.MaskType;
        }
        private void set_0_SfMaskedEdit_MaskType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.MaskType = (global::Syncfusion.UI.Xaml.Controls.Input.MaskType)Value;
        }
        private object get_1_SfMaskedEdit_Mask(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.Mask;
        }
        private void set_1_SfMaskedEdit_Mask(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.Mask = (global::System.String)Value;
        }
        private object get_2_SfTextBoxExt_Watermark(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.Watermark;
        }
        private void set_2_SfTextBoxExt_Watermark(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.Watermark = (global::System.Object)Value;
        }
        private object get_3_SfMaskedEdit_Value(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.Value;
        }
        private void set_3_SfMaskedEdit_Value(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_4_SfMaskedEdit_PromptChar(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.PromptChar;
        }
        private void set_4_SfMaskedEdit_PromptChar(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.PromptChar = (global::System.Char)Value;
        }
        private object get_5_SfMaskedEdit_ValueMaskFormat(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.ValueMaskFormat;
        }
        private void set_5_SfMaskedEdit_ValueMaskFormat(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.ValueMaskFormat = (global::Syncfusion.UI.Xaml.Controls.Input.MaskFormat)Value;
        }
        private object get_6_SfMaskedEdit_ShowPromptOnFocus(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.ShowPromptOnFocus;
        }
        private void set_6_SfMaskedEdit_ShowPromptOnFocus(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.ShowPromptOnFocus = (global::System.Boolean)Value;
        }
        private object get_7_SfMaskedEdit_HasError(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.HasError;
        }
        private object get_8_SfMaskedEdit_ValidationMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.ValidationMode;
        }
        private void set_8_SfMaskedEdit_ValidationMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.ValidationMode = (global::Syncfusion.UI.Xaml.Controls.Input.InputValidationMode)Value;
        }
        private object get_9_SfMaskedEdit_Culture(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.Culture;
        }
        private void set_9_SfMaskedEdit_Culture(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.Culture = (global::System.Globalization.CultureInfo)Value;
        }
        private object get_10_SfMaskedEdit_KeyboardType(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            return that.KeyboardType;
        }
        private void set_10_SfMaskedEdit_KeyboardType(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit)instance;
            that.KeyboardType = (global::Syncfusion.UI.Xaml.Controls.Input.KeyboardOptions)Value;
        }
        private object get_11_SfTextBoxExt_AllowPointerEvents(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.AllowPointerEvents;
        }
        private void set_11_SfTextBoxExt_AllowPointerEvents(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.AllowPointerEvents = (global::System.Boolean)Value;
        }
        private object get_12_SfTextBoxExt_AutoCompleteSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.AutoCompleteSource;
        }
        private void set_12_SfTextBoxExt_AutoCompleteSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.AutoCompleteSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_13_SfTextBoxExt_AutoCompleteItemTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.AutoCompleteItemTemplate;
        }
        private void set_13_SfTextBoxExt_AutoCompleteItemTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.AutoCompleteItemTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_14_SfTextBoxExt_AutoCompleteItemTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.AutoCompleteItemTemplateSelector;
        }
        private void set_14_SfTextBoxExt_AutoCompleteItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.AutoCompleteItemTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_15_SfTextBoxExt_AutoCompleteItemsPanel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.AutoCompleteItemsPanel;
        }
        private void set_15_SfTextBoxExt_AutoCompleteItemsPanel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.AutoCompleteItemsPanel = (global::Windows.UI.Xaml.Controls.ItemsPanelTemplate)Value;
        }
        private object get_16_SfTextBoxExt_IsSuggestionOpen(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.IsSuggestionOpen;
        }
        private void set_16_SfTextBoxExt_IsSuggestionOpen(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.IsSuggestionOpen = (global::System.Boolean)Value;
        }
        private object get_17_SfTextBoxExt_SuggestionBoxPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SuggestionBoxPosition;
        }
        private object get_18_SfTextBoxExt_SearchItemPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SearchItemPath;
        }
        private void set_18_SfTextBoxExt_SearchItemPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.SearchItemPath = (global::System.String)Value;
        }
        private object get_19_SfTextBoxExt_ValueMemberPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.ValueMemberPath;
        }
        private void set_19_SfTextBoxExt_ValueMemberPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.ValueMemberPath = (global::System.String)Value;
        }
        private object get_20_SfTextBoxExt_Suggestions(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.Suggestions;
        }
        private object get_21_SfTextBoxExt_SuggestionIndex(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SuggestionIndex;
        }
        private object get_22_SfTextBoxExt_AutoCompleteMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.AutoCompleteMode;
        }
        private void set_22_SfTextBoxExt_AutoCompleteMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.AutoCompleteMode = (global::Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode)Value;
        }
        private object get_23_SfTextBoxExt_SuggestionBoxPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SuggestionBoxPlacement;
        }
        private void set_23_SfTextBoxExt_SuggestionBoxPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.SuggestionBoxPlacement = (global::Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement)Value;
        }
        private object get_24_SfTextBoxExt_SuggestionMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SuggestionMode;
        }
        private void set_24_SfTextBoxExt_SuggestionMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.SuggestionMode = (global::Syncfusion.UI.Xaml.Controls.Input.SuggestionMode)Value;
        }
        private object get_25_SfTextBoxExt_IgnoreCase(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.IgnoreCase;
        }
        private void set_25_SfTextBoxExt_IgnoreCase(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.IgnoreCase = (global::System.Boolean)Value;
        }
        private object get_26_SfTextBoxExt_MinimumPrefixCharacters(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.MinimumPrefixCharacters;
        }
        private void set_26_SfTextBoxExt_MinimumPrefixCharacters(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.MinimumPrefixCharacters = (global::System.Int32)Value;
        }
        private object get_27_SfTextBoxExt_PopupDelay(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.PopupDelay;
        }
        private void set_27_SfTextBoxExt_PopupDelay(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.PopupDelay = (global::System.TimeSpan)Value;
        }
        private object get_28_SfTextBoxExt_MaxDropDownHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.MaxDropDownHeight;
        }
        private void set_28_SfTextBoxExt_MaxDropDownHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.MaxDropDownHeight = (global::System.Double)Value;
        }
        private object get_29_SfTextBoxExt_SuggestionBoxStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SuggestionBoxStyle;
        }
        private void set_29_SfTextBoxExt_SuggestionBoxStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.SuggestionBoxStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_30_SfTextBoxExt_Delimeter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.Delimeter;
        }
        private void set_30_SfTextBoxExt_Delimeter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.Delimeter = (global::System.String)Value;
        }
        private object get_31_SfTextBoxExt_Delimiter(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.Delimiter;
        }
        private void set_31_SfTextBoxExt_Delimiter(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.Delimiter = (global::System.String)Value;
        }
        private object get_32_SfTextBoxExt_ShowSuggestionsOnFocus(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.ShowSuggestionsOnFocus;
        }
        private void set_32_SfTextBoxExt_ShowSuggestionsOnFocus(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.ShowSuggestionsOnFocus = (global::System.Boolean)Value;
        }
        private object get_33_SfTextBoxExt_SelectedItem(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SelectedItem;
        }
        private void set_33_SfTextBoxExt_SelectedItem(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_34_SfTextBoxExt_SelectedValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.SelectedValue;
        }
        private void set_34_SfTextBoxExt_SelectedValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.SelectedValue = (global::System.Object)Value;
        }
        private object get_35_SfTextBoxExt_WatermarkForeground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.WatermarkForeground;
        }
        private void set_35_SfTextBoxExt_WatermarkForeground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.WatermarkForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_36_SfTextBoxExt_WatermarkTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.WatermarkTemplate;
        }
        private void set_36_SfTextBoxExt_WatermarkTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.WatermarkTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_37_SfTextBoxExt_WatermarkTemplateSelector(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            return that.WatermarkTemplateSelector;
        }
        private void set_37_SfTextBoxExt_WatermarkTemplateSelector(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt)instance;
            that.WatermarkTemplateSelector = (global::Windows.UI.Xaml.Controls.DataTemplateSelector)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember xamlMember = null;
            global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.MaskType":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "MaskType", "Syncfusion.UI.Xaml.Controls.Input.MaskType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_SfMaskedEdit_MaskType;
                xamlMember.Setter = set_0_SfMaskedEdit_MaskType;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.Mask":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "Mask", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_SfMaskedEdit_Mask;
                xamlMember.Setter = set_1_SfMaskedEdit_Mask;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.Watermark":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "Watermark", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_SfTextBoxExt_Watermark;
                xamlMember.Setter = set_2_SfTextBoxExt_Watermark;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.Value":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_SfMaskedEdit_Value;
                xamlMember.Setter = set_3_SfMaskedEdit_Value;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.PromptChar":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "PromptChar", "Char");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_SfMaskedEdit_PromptChar;
                xamlMember.Setter = set_4_SfMaskedEdit_PromptChar;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.ValueMaskFormat":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "ValueMaskFormat", "Syncfusion.UI.Xaml.Controls.Input.MaskFormat");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_SfMaskedEdit_ValueMaskFormat;
                xamlMember.Setter = set_5_SfMaskedEdit_ValueMaskFormat;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.ShowPromptOnFocus":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "ShowPromptOnFocus", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_SfMaskedEdit_ShowPromptOnFocus;
                xamlMember.Setter = set_6_SfMaskedEdit_ShowPromptOnFocus;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.HasError":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "HasError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_SfMaskedEdit_HasError;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.ValidationMode":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "ValidationMode", "Syncfusion.UI.Xaml.Controls.Input.InputValidationMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_SfMaskedEdit_ValidationMode;
                xamlMember.Setter = set_8_SfMaskedEdit_ValidationMode;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.Culture":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "Culture", "System.Globalization.CultureInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_SfMaskedEdit_Culture;
                xamlMember.Setter = set_9_SfMaskedEdit_Culture;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit.KeyboardType":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfMaskedEdit");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "KeyboardType", "Syncfusion.UI.Xaml.Controls.Input.KeyboardOptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_SfMaskedEdit_KeyboardType;
                xamlMember.Setter = set_10_SfMaskedEdit_KeyboardType;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.AllowPointerEvents":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "AllowPointerEvents", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_SfTextBoxExt_AllowPointerEvents;
                xamlMember.Setter = set_11_SfTextBoxExt_AllowPointerEvents;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.AutoCompleteSource":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "AutoCompleteSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_SfTextBoxExt_AutoCompleteSource;
                xamlMember.Setter = set_12_SfTextBoxExt_AutoCompleteSource;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.AutoCompleteItemTemplate":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "AutoCompleteItemTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_SfTextBoxExt_AutoCompleteItemTemplate;
                xamlMember.Setter = set_13_SfTextBoxExt_AutoCompleteItemTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.AutoCompleteItemTemplateSelector":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "AutoCompleteItemTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_SfTextBoxExt_AutoCompleteItemTemplateSelector;
                xamlMember.Setter = set_14_SfTextBoxExt_AutoCompleteItemTemplateSelector;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.AutoCompleteItemsPanel":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "AutoCompleteItemsPanel", "Windows.UI.Xaml.Controls.ItemsPanelTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_SfTextBoxExt_AutoCompleteItemsPanel;
                xamlMember.Setter = set_15_SfTextBoxExt_AutoCompleteItemsPanel;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.IsSuggestionOpen":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "IsSuggestionOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_SfTextBoxExt_IsSuggestionOpen;
                xamlMember.Setter = set_16_SfTextBoxExt_IsSuggestionOpen;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SuggestionBoxPosition":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SuggestionBoxPosition", "Windows.Foundation.Point");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_SfTextBoxExt_SuggestionBoxPosition;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SearchItemPath":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SearchItemPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_SfTextBoxExt_SearchItemPath;
                xamlMember.Setter = set_18_SfTextBoxExt_SearchItemPath;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.ValueMemberPath":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "ValueMemberPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_SfTextBoxExt_ValueMemberPath;
                xamlMember.Setter = set_19_SfTextBoxExt_ValueMemberPath;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.Suggestions":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "Suggestions", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_SfTextBoxExt_Suggestions;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SuggestionIndex":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SuggestionIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_SfTextBoxExt_SuggestionIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.AutoCompleteMode":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "AutoCompleteMode", "Syncfusion.UI.Xaml.Controls.Input.AutoCompleteMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_SfTextBoxExt_AutoCompleteMode;
                xamlMember.Setter = set_22_SfTextBoxExt_AutoCompleteMode;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SuggestionBoxPlacement":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SuggestionBoxPlacement", "Syncfusion.UI.Xaml.Controls.Input.SuggestionBoxPlacement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_SfTextBoxExt_SuggestionBoxPlacement;
                xamlMember.Setter = set_23_SfTextBoxExt_SuggestionBoxPlacement;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SuggestionMode":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SuggestionMode", "Syncfusion.UI.Xaml.Controls.Input.SuggestionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_SfTextBoxExt_SuggestionMode;
                xamlMember.Setter = set_24_SfTextBoxExt_SuggestionMode;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.IgnoreCase":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "IgnoreCase", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_SfTextBoxExt_IgnoreCase;
                xamlMember.Setter = set_25_SfTextBoxExt_IgnoreCase;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.MinimumPrefixCharacters":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "MinimumPrefixCharacters", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_SfTextBoxExt_MinimumPrefixCharacters;
                xamlMember.Setter = set_26_SfTextBoxExt_MinimumPrefixCharacters;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.PopupDelay":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "PopupDelay", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_SfTextBoxExt_PopupDelay;
                xamlMember.Setter = set_27_SfTextBoxExt_PopupDelay;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.MaxDropDownHeight":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "MaxDropDownHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_SfTextBoxExt_MaxDropDownHeight;
                xamlMember.Setter = set_28_SfTextBoxExt_MaxDropDownHeight;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SuggestionBoxStyle":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SuggestionBoxStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_SfTextBoxExt_SuggestionBoxStyle;
                xamlMember.Setter = set_29_SfTextBoxExt_SuggestionBoxStyle;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.Delimeter":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "Delimeter", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_SfTextBoxExt_Delimeter;
                xamlMember.Setter = set_30_SfTextBoxExt_Delimeter;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.Delimiter":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "Delimiter", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_SfTextBoxExt_Delimiter;
                xamlMember.Setter = set_31_SfTextBoxExt_Delimiter;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.ShowSuggestionsOnFocus":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "ShowSuggestionsOnFocus", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_SfTextBoxExt_ShowSuggestionsOnFocus;
                xamlMember.Setter = set_32_SfTextBoxExt_ShowSuggestionsOnFocus;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SelectedItem":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_SfTextBoxExt_SelectedItem;
                xamlMember.Setter = set_33_SfTextBoxExt_SelectedItem;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.SelectedValue":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "SelectedValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_SfTextBoxExt_SelectedValue;
                xamlMember.Setter = set_34_SfTextBoxExt_SelectedValue;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.WatermarkForeground":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "WatermarkForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_SfTextBoxExt_WatermarkForeground;
                xamlMember.Setter = set_35_SfTextBoxExt_WatermarkForeground;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.WatermarkTemplate":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "WatermarkTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_SfTextBoxExt_WatermarkTemplate;
                xamlMember.Setter = set_36_SfTextBoxExt_WatermarkTemplate;
                break;
            case "Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt.WatermarkTemplateSelector":
                userType = (global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Controls.Input.SfTextBoxExt");
                xamlMember = new global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlMember(this, "WatermarkTemplateSelector", "Windows.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_SfTextBoxExt_WatermarkTemplateSelector;
                xamlMember.Setter = set_37_SfTextBoxExt_WatermarkTemplateSelector;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlSystemBaseType
    {
        global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::UWPSFMaskEdit.UWPSFMaskEdit_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

